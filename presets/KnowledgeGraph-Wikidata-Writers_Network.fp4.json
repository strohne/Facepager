{
  "name": "Wikidata: Writers Network",
  "category": "Knowledge Graph",
  "description": "This preset fetches a list of German writers as well as cities relevant to them based on literary movements. To start add a Q-identifier of an arbitrary literary movement as seed node, e.g. \"Q37068\" for romanticism. Then fetch data. \n\nSee our [Getting Started with Wikidata (writers network)](https://github.com/strohne/Facepager/wiki/Getting-Started-with-Wikidata-(writers-network)) for a full walk through this preset.\n\nCheck https://www.wikidata.org/ for further information. You can try out different queries on https://query.wikidata.org/ (paste the value of the query parameter).\n\nAlways ensure to comply to [Wikidata's User-Agent policy](https://foundation.wikimedia.org/wiki/Policy:User-Agent_policy) and be mindful of potential [query limits](https://www.mediawiki.org/wiki/Wikidata_Query_Service/User_Manual#Query_limits).\n\nPlease be aware that expressions in angle brackets are handled as placeholder by Facepager. Thus, the brackets of the prefixes have to be escaped with a backslash.\n\nPagination is handled by the placeholder.\n",
  "module": "Generic",
  "options": {
    "auth": "disable",
    "auth_prefix": "",
    "auth_tokenname": "",
    "auth_type": "Disable",
    "auth_uri": "",
    "basepath": "https://query.wikidata.org",
    "extension": "",
    "fileext": "<None>",
    "filename": "<None>",
    "format": "json",
    "headers": {
      "Accept-Encoding": "gzip,deflate",
      "User-Agent": "FACEPAGERBOT/4.5 ([https://github.com/strohne/Facepager](https://github.com/strohne/Facepager)) fp/4.5"
    },
    "nodedata": "results.bindings",
    "objectid": null,
    "offset_start": 0,
    "offset_step": 10,
    "pages": 2,
    "paging_type": "count",
    "param_paging": "<offset>",
    "params": {
      "format": "json",
      "query": "SELECT DISTINCT ?writer ?writerLabel ?place ?placeLabel ?movement\nWHERE\n{\n  # get all German writers of a literary movement\n  ?writer wdt:P135 wd:<Object ID>;\n          wdt:P106 wd:Q36180;\n          wdt:P6886 wd:Q188.\n  \n  wd:<Object ID> rdfs:label ?movement.\n  filter(lang(?movement) = \"en\")\n  \n  # relevant places\n  ?writer wdt:P19|wdt:P20|(wdt:P69/wdt:P131)|(wdt:P108/wdt:P131) ?place.\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n  \n}"
    },
    "proxy": "",
    "redirect_uri": "",
    "resource": "/sparql",
    "scope": "",
    "token_uri": "",
    "verb": "GET"
  },
  "speed": 200,
  "saveheaders": false,
  "timeout": 15,
  "maxsize": 5,
  "columns": [
    "writerLabel.value",
    "placeLabel.value",
    "movement.value"
  ]
}