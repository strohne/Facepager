{
  "name": "DBPedia: Scientists who have birhtday today",
  "category": "Knowledge Graph",
  "description": "*This preset requires at least Facepager v4.6.* \n\nGet the names, descriptions, birthdays and if available thumbnail images of scientists who have birthday today. The results are limited to English and to the 10 oldest scientists. \n\nAdd an arbitrary node and fetch data. The node name doesn't matter as it is not used in the query. Suggestion: add dates as node names and adjust the query to get scientists who have birthday at a specific date.\n\nDBPedia is like Wikidata a semantic web version of Wikipedia. On the semantic web data is organizied according to the Resource Decription Framework (RDF). The preset retrieves data from the SPARQL endpoint of DBPedia. DBPedia mainly consists of content scrapted from the info boxes of Wikipedia. With limiting to english names and descriptions the results should reflect the English Wikipedia.\n\nSee https://wiki.dbpedia.org/ for details about DBPedia. If you are not familiar with semantic web technology consider reading Wikipedia articles about the Resource Description Framework and about SPARQL.\n\nThe example query was taken from an OpenHPI course: https://open.hpi.de/courses/semanticweb2017/\n\nPay attention on how the SPARQL query is formulated. Since angle brackets signify placeholders in Facepager they have to be masked with a backslash. If you need a backslash in your query, mask it by another backslash. To use the name of a node or data of previously fetched nodes in your query user placeholders (see the Facepager help).\n",
  "module": "SPARQL",
  "options": {
    "auth": "disable",
    "auth_prefix": "",
    "auth_tokenname": "",
    "auth_type": "Disable",
    "auth_uri": "",
    "basepath": "http://dbpedia.org/sparql",
    "extension": "",
    "format": "json",
    "headers": {
      "User-Agent": "FACEPAGERBOT/4.6 ([https://github.com/strohne/Facepager](https://github.com/strohne/Facepager)) fp/4.6"
    },
    "key_paging": null,
    "nodedata": "results.bindings",
    "objectid": null,
    "offset_start": 1,
    "offset_step": 1,
    "paging_stop": null,
    "paging_type": null,
    "param_paging": null,
    "params": {
      "format": "json",
      "query": "PREFIX rdf: \\<http://www.w3.org/1999/02/22-rdf-syntax-ns#\\>\nPREFIX dbo: \\<http://dbpedia.org/ontology/\\>\nPREFIX rdfs: \\<http://www.w3.org/2000/01/rdf-schema#\\>\nPREFIX dc:  \\<http://purl.org/dc/elements/1.1/\\>\n\nSelect distinct ?birthdate ?thumbnail ?scientist ?name ?description  WHERE {\n?scientist rdf:type dbo:Scientist ;\n        dbo:birthDate ?birthdate ;\n        rdfs:label ?name ;\n        rdfs:comment ?description \n FILTER ((lang(?name)=\"en\")&&(lang(?description)=\"en\")&&(STRLEN(STR(?birthdate))>6)&&(SUBSTR(STR(?birthdate),6)=SUBSTR(STR(bif:curdate('')),6))) .\n OPTIONAL { ?scientist dbo:thumbnail ?thumbnail . }\n} ORDER BY ?birthdate LIMIT 10"
    },
    "redirect_uri": "",
    "resource": "",
    "token_uri": ""
  },
  "speed": 200,
  "saveheaders": false,
  "timeout": 15,
  "maxsize": 5,
  "columns": [
    "name.value",
    "description.value",
    "birthdate.value",
    "thumbnail.value"
  ]
}