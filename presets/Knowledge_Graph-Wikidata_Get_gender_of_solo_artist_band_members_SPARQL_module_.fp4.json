{
  "name": "(SPARQL module) Wikidata: Get gender of solo artist/band members",
  "category": "Knowledge Graph",
  "description": "SPARQL module is work in progress \n\nThis preset fetches a list of muscial artists and their sex or gender as provided by Wikidata. To start add the English name (label) of an arbitary musical solo artist or band as seed node, e.g. \"Peter Maffay\" or \"Coldplay\". The query automatically extracts names of band members and their respective on the basis of the group's name, e.g. \"Coldplay\". \n\nSee https://www.wikidata.org/ for further information. You can try out different queries on https://query.wikidata.org/ (paste the value of the query parameter).\n\nAlways ensure to comply to Wikidata's User-Agent policy and be mindful of potential query limits.\n\nPlease be aware that expressions in angle brackets are handled as placeholder by Facepager. Thus, the brackets of the prefixes have to be escaped with a backslash.\n\nPagination is handled by the placeholder.",
  "module": "SPARQL",
  "options": {
    "basepath": "https://query.wikidata.org/sparql",
    "extension": "",
    "paging_type": null,
    "key_paging": null,
    "paging_stop": null,
    "param_paging": null,
    "offset_start": 1,
    "offset_step": 1,
    "nodedata": "results.bindings",
    "objectid": null,
    "auth_type": "Disable",
    "auth_uri": "",
    "redirect_uri": "",
    "token_uri": "",
    "auth": "disable",
    "auth_prefix": "",
    "auth_tokenname": "",
    "resource": "",
    "format": "json",
    "headers": {
      "User-Agent": "FACEPAGERBOT/4.5 ([https://github.com/strohne/Facepager](https://github.com/strohne/Facepager)) fp/4.5"
    },
    "params": {
      "query": "SELECT distinct ?entityLabel ?genderLabel WHERE {\n  \n   # Search for solo artist or band\n  ?entity rdfs:label \"<Object ID>\"@en.\n  \n  # Check if ?entity is solo artist or band (musical group)\n  {\n    # If solo artist, get sex or gender\n    ?entity wdt:P31 wd:Q5.  \n    ?entity wdt:P21 ?gender.  \n  }\n  UNION\n  {\n    # If band (musical group), first get all members then their sex or gender \n    ?entity wdt:P31 wd:Q215380. \n    ?entity wdt:P527 ?member. \n    ?member wdt:P21 ?gender. \n    ?member rdfs:label ?entityLabel.\n    FILTER(LANG(?entityLabel) = \"en\")\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
      "format": "json"
    }
  },
  "speed": 200,
  "saveheaders": false,
  "timeout": 15,
  "maxsize": 5,
  "columns": [
    "genderLabel.value"
  ]
}